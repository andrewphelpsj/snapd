summary: Test sideloading components

details: |
  Verifies that we can sideload asserted components, and that we cannot sideload
  unasserted components without using the --dangerous flag.

systems: [ubuntu-16.04-64, ubuntu-18.04-64, ubuntu-2*, ubuntu-core-*, fedora-*]

execute: |
  snap install test-snap-with-components+one

  cp /var/lib/snapd/snaps/test-snap-with-components*.comp test-snap-with-components+one.comp

  # TODO:COMPS: make this test simpler once "snap download" for components is
  # merged.

  # TODO:COMPS: add usage of the --component-ref flag to this test once it is
  # merged.

  # remove the component, but the assertions will stay around. we should be able
  # to sideload the component again.
  snap remove test-snap-with-components+one

  snap install ./test-snap-with-components+one.comp
  snap components test-snap-with-components | MATCH "test-snap-with-components\+one\s+installed\s+test"

  snap remove test-snap-with-components+one

  # remove the assertions manually this time, we should not be able to sideload
  # the component again.
  rm -r /var/lib/snapd/assertions/asserts-v0/snap-resource-pair \
        /var/lib/snapd/assertions/asserts-v0/snap-resource-revision

  not snap install ./test-snap-with-components+one.comp 2>&1 | tr '\n' ' ' | MATCH 'cannot find signatures with metadata for snap/component\s+"\./test-snap-with-components\+one.comp"'

  # and we also can't use the --dangerous flag, since the snap is asserted.
  not snap install --dangerous ./test-snap-with-components+one.comp 2>&1  | tr '\n' ' ' | MATCH 'cannot install component file: cannot mix asserted snap and unasserted\s+components'
